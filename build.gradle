plugins {
    id 'java'
    id("io.qameta.allure") version "2.12.0"
}

group = 'guru.qa'
version = '1.0-SNAPSHOT'

allure{
    version.set("2.28.0")
    adapter {
        // Configure version for io.qameta.allure:allure-* adapters
        // It defaults to allure.version
        allureJavaVersion.set("2.28.0")
        aspectjVersion.set("1.9.22.1")

        // Customize environment variables for launching Allure
        environment.put("JAVA_HOME", "/path/to/java_home")

        autoconfigure.set(true)
        autoconfigureListeners.set(true)
        aspectjWeaver.set(true)

        // By default, categories.json is detected in src/test/resources/../categories.json,
        // However, it would be better to put the file in a well-known location and configure it explicitly
        categoriesFile.set(layout.projectDirectory.file("config/allure/categories.json"))
        frameworks {
            junit5 {
                // Defaults to allureJavaVersion
                adapterVersion.set("2.28.0")
                enabled.set(true)
                // Enables allure-junit4 default test listeners via META-INF/services/...
                autoconfigureListeners.set(true)


//    report {
//        version.set("2.30.0")
//    }
//    adapter {
//        aspectjWeaver.set(true)
//        frameworks {
//            junit5 {
//                adapterVersion.set("2.30.0")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation group: 'com.codeborne', name: 'selenide', version: '7.3.3'
    testImplementation 'io.qameta.allure:allure-selenide:2.28.1'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task simple_test(type: Test) {

    useJUnitPlatform {
        includeTags("simple")
    }
}


task one_property_test(type: Test) {

    testLogging {
        events "passed", "skipped", "failed"
    }

    useJUnitPlatform {
        includeTags("one_property")
    }
}

    task simple1_test(type: Test) {

        useJUnitPlatform {
            includeTags("simple1")
        }
    }

task Hello_test(type: Test) {

    useJUnitPlatform {
        includeTags("Hello")

        // gradle clean hello_test -Duser_name="Alex Egorov"
    }
}

